#!/bin/bash

. ./functions.sh

require_root
boardmanager_choose
require_rootfs_initialized
LATEST_PACKAGE="$work_dir/download/ArchLinuxARM-${BOARD}.tar.gz"



wget -O $LATEST_PACKAGE -c -N `board_archlinux_latest_url`

bsdtar --version &> /dev/null || apt-get install bsdtar
[[ -d "$work_dir/root_from_targz/var" ]] || bsdtar -xpf $LATEST_PACKAGE -C "$work_dir/root_from_targz"

echo " $LATEST_PACKAGE downloaded! "
# copy dir skeleton (except /usr & ./var/lib)
cd "$work_dir/root_from_targz"
find -type d \( -path ./usr -o -path ./var/lib \) -prune -o -links 2 -exec mkdir -p "../root/{}" \;
cd "$root_dir"

#redundantely create basic directories
mkdir -p "$work_dir/root/dev" "$work_dir/root/mnt" "$work_dir/root/proc" "$work_dir/root/run" "$work_dir/root/srv" "$work_dir/root/sys" "$work_dir/root/tmp"



# copy permission (from http://askubuntu.com/questions/56792/how-to-copy-only-file-attributes-metadata-without-actual-content-of-the-file/150888#150888)


if false
then
	# this is not 100% compatible to all coreutils

	COREUTILS_VER=`cp --version | grep cp | grep coreutils | awk '{print $(NF)}'`
	echo "Coreutils version: $COREUTILS_VER"
	echo "This version number must be >= 8.17. Otherwise this script will mess up the ./root directory. " 
	read -p "Continue? (y/n) " -n 1 -r
	echo ""
	if [[ $REPLY =~ ^[Yy]$ ]]
	then
		# copy attributes (e.g. permissions), not following symlinks
		echo "Fixing permissions..."
		cp --archive --attributes-only "$work_dir/root_from_targz/." ./root/
	fi
else
	
	myecho=echo
	src_path="$work_dir/root_from_targz/"
	dst_path="$work_dir/root/"

	echo "Fixing permissions in $dst_path (there can be an error with ./root/etc/mtab)..."

	echo "  files..."
	#files
	find "$src_path" |
	  while read src_file; do
	    dst_file="$dst_path${src_file#$src_path}"
	    if [[ -f "$dst_file" ]]; then
		    chmod --reference="$src_file" "$dst_file"
		    chown --reference="$src_file" "$dst_file"
	    fi
	  done

	echo "  directories..."
	#directories
	find "$src_path" -type d |
	  while read src_file; do
	    dst_file="$dst_path${src_file#$src_path}"
	    chmod --reference="$src_file" "$dst_file"
	    chown --reference="$src_file" "$dst_file"
	  done

	echo "done!";
fi

rm -r "$work_dir/root_from_targz"
# lists new directories:
#rsync -avun --delete "$work_dir/root" "$work_dir/root_from_targz" | grep "delet"

